{"version":3,"sources":["actions/index.js","reducers/index.js","store/index.js","components/Favorites/Favorites.js","components/Movie/Movie.js","components/Buscador/Buscador.js","assets/logo.svg","components/NavBar/NavBar.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["getMovies","titulo","dispatch","fetch","then","response","json","type","payload","getMovieDetail","movie","addMovieFavorite","idMovie","removeMovieFavorite","initialState","moviesFavourites","moviesLoaded","movieDetail","rootReducer","state","action","concat","Search","filter","imdbID","composeEnhancers","window","__REDUX_DEVSTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ConnectedList","props","console","log","favorites","this","id","map","index","className","to","Title","some","element","onClick","class","Plot","Component","connect","movies","title","Movie","match","params","src","Poster","alt","addFavorite","Awards","Year","Genre","Director","Actors","Writer","React","Buscador","event","setState","target","value","preventDefault","onSubmit","e","handleSubmit","placeholder","autoComplete","onChange","handleChange","href","Type","NavBar","Logo","exact","activeClassName","Footer","App","Fragment","path","component","Favorites","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"mXACO,SAASA,EAAUC,GAExB,OAAO,SAASC,GACd,OAAOC,MAAM,6BAAD,OAA8BF,EAA9B,qBACTG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACJJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,QAWzC,SAASG,EAAeC,GAE7B,OAAO,SAASR,GACd,OAAOC,MAAM,6BAAD,OAA8BO,EAA9B,qBACTN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACJJ,EAAS,CAAEK,KAAM,mBAAoBC,QAASF,QAO/C,SAASK,EAAiBC,GAC/B,MAAM,CACJL,KAAM,qBACNC,QAASI,GAKN,SAASC,EAAoBD,GAClC,MAAM,CACJL,KAAM,wBACNC,QAASI,GCxCb,IAAME,EAAe,CACnBC,iBAAkB,GAClBC,aAAc,GACdC,YAAa,IA0CAC,MAvCf,WAAoD,IAA/BC,EAA8B,uDAAtBL,EAAcM,EAAQ,uCAEjD,MAAoB,uBAAhBA,EAAOb,KAEA,2BACFY,GADL,IAEEJ,iBAAkBI,EAAMJ,iBAAiBM,OAAOD,EAAOZ,WAGzC,eAAhBY,EAAOb,KACA,2BACFY,GADL,IAEEH,aAAcI,EAAOZ,QAAQc,SAIf,qBAAhBF,EAAOb,KAEF,2BACFY,GADL,IAEEF,YAAaG,EAAOZ,UAIJ,0BAAhBY,EAAOb,KAET,2BACKY,GADL,IAEEJ,iBAAkBI,EAAMJ,iBAAiBQ,QAAO,SAAAb,GAAK,OAAIA,EAAMc,SAAWJ,EAAOZ,aAQ9EW,G,QCvCHM,EAAqC,qBAAVC,QAAyBA,OAAOC,uCAA0CC,IAO5FC,EALDC,YACZZ,EACAO,EAAiBM,YAAgBC,O,8BCDtBC,EAAb,kDAEE,WAAYC,GAAO,IAAD,6BAChB,cAAMA,GAENC,QAAQC,IAAI,SAAW,EAAKF,MAAMG,WAHlB,EAFpB,uDASE,SAAoBzB,GAElB0B,KAAKJ,MAAMrB,oBAAoBD,KAXnC,oBAeE,WAAU,IAAD,OACP,OACE,yBAAS2B,GAAG,aAAZ,SAEE,sBAAKA,GAAG,UAAR,UACI,8CAECD,KAAKJ,MAAMG,UAAUG,KAAI,SAAC9B,GAAD,IAAS+B,EAAT,uDAAiB,EAAjB,OACxB,sBAAKC,UAAWD,EAAM,IAAM,EAAG,sBAAuB,SAAtD,UACE,cAAC,IAAD,CAAME,GAAE,iBAAYjC,EAAMc,QAA1B,SACE,4BAAId,EAAMkC,UAIV,EAAKV,MAAMG,UAAUQ,MAAK,SAAAC,GAAO,OAAIA,EAAQtB,SAAWd,EAAMc,UAC5D,wBAAQe,GAAG,eAAeQ,QAAS,kBAAM,EAAKlC,oBAAoB,EAAKqB,MAAMxB,MAAMc,SAAnF,SAA4F,mBAAGwB,MAAM,uBACrG,wBAAQT,GAAG,eAAeQ,QAAS,kBAAM,EAAKlC,oBAAoB,EAAKqB,MAAMxB,MAAMc,SAAnF,SAA4F,mBAAGwB,MAAM,kBAGvG,4BAAItC,EAAMuC,sBAlC5B,GAAmCC,aAmEpBC,mBAlBf,SAAyBhC,GACvB,MAAO,CACLiC,OAAQjC,EAAMH,aACdN,MAAOS,EAAMF,YACboB,UAAWlB,EAAMJ,qBAKrB,SAA4Bb,GAC1B,MAAO,CACLS,iBAAkB,SAAAD,GAAK,OAAIR,EAASS,EAAiBD,KACrDV,UAAW,SAAAqD,GAAK,OAAInD,EAASF,EAAUqD,KACvC5C,eAAgB,SAAA8B,GAAE,OAAIrC,EAASO,EAAe8B,KAC9C1B,oBAAqB,SAAA0B,GAAE,OAAIrC,EAASW,EAAoB0B,QAI7CY,CAGblB,GCvEIqB,G,8DAEF,WAAYpB,GAAQ,IAAD,8BACf,cAAMA,IAGDA,MAAMzB,eAAe,EAAKyB,MAAMqB,MAAMC,OAAOjB,IAJnC,E,+CAQnB,SAAY7B,GAEV4B,KAAKJ,MAAMvB,iBAAiBD,K,iCAG9B,SAAoBE,GAChB0B,KAAKJ,MAAMrB,oBAAoBD,K,oBAGnC,WAAU,IAAD,OACL,OAEI,0BAAS2B,GAAG,YAAZ,UAEI,uBAAOA,GAAG,gBAAV,SACI,qBAAKkB,IAAKnB,KAAKJ,MAAMxB,MAAMgD,OAAQC,IAAI,GAAGpB,GAAG,gBAGjD,wBAAOA,GAAG,wBAAV,UAEI,qBAAKS,MAAM,kBAAX,SACI,+BAAKV,KAAKJ,MAAMxB,MAAMkC,MAGlBN,KAAKJ,MAAMG,UAAUQ,MAAK,SAAAC,GAAO,OAAIA,EAAQtB,SAAW,EAAKU,MAAMxB,MAAMc,UACrE,wBAAQe,GAAG,eAAeQ,QAAS,kBAAM,EAAKlC,oBAAoB,EAAKqB,MAAMxB,MAAMc,SAAnF,SAA4F,mBAAGwB,MAAM,uBACrG,wBAAQT,GAAG,eAAeQ,QAAS,kBAAM,EAAKa,YAAY,EAAK1B,MAAMxB,QAArE,SAA6E,mBAAGsC,MAAM,uBAOlG,4BAAIV,KAAKJ,MAAMxB,MAAMuC,OACrB,uBAEA,sBAAKV,GAAG,aAAR,UACI,wCACA,8BAAG,mBAAGS,MAAM,gBAAZ,IAAgCV,KAAKJ,MAAMxB,MAAMmD,aAIrD,uBAEA,sBAAKb,MAAM,cAAX,UACI,sBAAMA,MAAM,oBAAZ,mBACA,+BAAOV,KAAKJ,MAAMxB,MAAMoD,UAG5B,sBAAKd,MAAM,cAAX,UACI,sBAAMA,MAAM,oBAAZ,oBACA,+BAAOV,KAAKJ,MAAMxB,MAAMqD,WAG5B,sBAAKf,MAAM,cAAX,UACI,sBAAMA,MAAM,oBAAZ,uBACA,+BAAOV,KAAKJ,MAAMxB,MAAMsD,cAG5B,sBAAKhB,MAAM,cAAX,UACI,sBAAMA,MAAM,oBAAZ,qBACA,+BAAOV,KAAKJ,MAAMxB,MAAMuD,YAG5B,sBAAKjB,MAAM,cAAX,UACI,sBAAMA,MAAM,oBAAZ,qBACA,+BAAOV,KAAKJ,MAAMxB,MAAMwD,YAG5B,sBAAKlB,MAAM,cAAX,UACI,sBAAMA,MAAM,oBAAZ,wBACA,8CAGJ,yBAAQT,GAAG,kBAAX,8BAA8C,mBAAGS,MAAM,kC,GApFvDmB,IAAMjB,YAmHTC,mBAlBjB,SAAyBhC,GACrB,MAAO,CACLiC,OAAQjC,EAAMH,aACdN,MAAOS,EAAMF,YACboB,UAAWlB,EAAMJ,qBAKvB,SAA4Bb,GACxB,MAAO,CACLS,iBAAkB,SAAAD,GAAK,OAAIR,EAASS,EAAiBD,KACrDV,UAAW,SAAAqD,GAAK,OAAInD,EAASF,EAAUqD,KACvC5C,eAAgB,SAAA8B,GAAE,OAAIrC,EAASO,EAAe8B,KAC9C1B,oBAAqB,SAAA0B,GAAE,OAAIrC,EAASW,EAAoB0B,QAI7CY,CAGbG,GCjHSc,EAAb,kDACE,WAAYlC,GAAQ,IAAD,8BACjB,cAAMA,IACDf,MAAQ,CACXkC,MAAO,IAHQ,EADrB,gDAOE,SAAagB,GACX/B,KAAKgC,SAAS,CAAEjB,MAAOgB,EAAME,OAAOC,UARxC,0BAYE,SAAaH,GACXA,EAAMI,iBAENnC,KAAKJ,MAAMlC,UAAUsC,KAAKnB,MAAMkC,OAIhCf,KAAKgC,SAAS,CAACjB,MAAO,OAnB1B,oBAwBE,WAAU,IAAD,OACCA,EAAUf,KAAKnB,MAAfkC,MACR,OACE,8BAIE,0BAASd,GAAG,aAAZ,UACE,uBAAMnB,OAAO,IAAImB,GAAG,cAAcmC,SAAU,SAACC,GAAD,OAAO,EAAKC,aAAaD,IAArE,UAEI,uBAAQpE,KAAK,OACLsE,YAAY,iBACZtC,GAAG,eACHuC,aAAa,MACbN,MAAOnB,EACP0B,SAAU,SAACJ,GAAD,OAAO,EAAKK,aAAaL,MAI3C,uBAAOpE,KAAK,SAASiE,MAAM,SAASjC,GAAG,kBAI3C,sBAAKA,GAAG,UAAR,UACI,uDAKED,KAAKJ,MAAMkB,OAAOZ,KAAI,SAAC9B,GAAD,IAAS+B,EAAT,uDAAe,EAAf,OAEpB,qBAAKC,UAAWD,EAAM,IAAM,EAAG,sBAAuB,SAAtD,SAGE,eAAC,IAAD,CAAME,GAAE,iBAAYjC,EAAMc,QAA1B,UACE,oBAAGyD,KAAK,aAAR,UAAsBvE,EAAMkC,MAGxB,EAAKV,MAAMG,UAAUQ,MAAK,SAAAC,GAAO,OAAIA,EAAQtB,SAAWd,EAAMc,UAC5D,mBAAGkB,UAAU,qBACb,mBAAGA,UAAU,mBAKnB,8BAAIhC,EAAMoD,KAAV,MAAmBpD,EAAMwE,4BArE/C,GAA8BhC,aA4GfC,mBAdf,SAAyBhC,GACvB,MAAO,CACLiC,OAAQjC,EAAMH,aACdqB,UAAWlB,EAAMJ,qBAIrB,SAA4Bb,GAC1B,MAAO,CACLS,iBAAkB,SAAAD,GAAK,OAAIR,EAASS,EAAiBD,KACrDV,UAAW,SAAAqD,GAAK,OAAInD,EAASF,EAAUqD,QAI5BF,CAGbiB,GC3Ha,MAA0B,iC,MCQ1B,SAASe,IACpB,OAEI,mCAEI,cAAC,IAAD,CAAMxC,GAAI,IAAV,SAAe,qBAAKc,IAAK2B,EAAMzB,IAAI,GAAGpB,GAAG,WACzC,qBAAIA,GAAG,WAAP,UACI,6BACI,cAAC,IAAD,CAAS8C,OAAK,EAAC1C,GAAG,IAAI2C,gBAAgB,aAAtC,oBAEJ,6BACI,cAAC,IAAD,CAAS3C,GAAG,QAAQ2C,gBAAgB,aAApC,+B,WChBCC,G,kKAGnB,WACE,OACE,mCACI,4DACA,0E,GAP0BrC,cCoBrBsC,MAZf,WACE,OACI,eAAC,IAAMC,SAAP,WACI,cAACN,EAAD,IACA,cAAC,IAAD,CAAOE,OAAK,EAACK,KAAK,IAAIC,UAAWvB,IACjC,cAAC,IAAD,CAAOsB,KAAK,QAAQC,UAAWC,IAC/B,cAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWrC,IACpC,cAAC,EAAD,QCNUuC,QACW,cAA7BnE,OAAOoE,SAASC,UAEe,UAA7BrE,OAAOoE,SAASC,UAEhBrE,OAAOoE,SAASC,SAASxC,MACvB,2DCRNyC,IAASC,OACP,cAAC,IAAD,CAAUpE,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJqE,SAASC,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlG,MAAK,SAAAmG,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvE,QAAQuE,MAAMA,EAAMC,c","file":"static/js/main.864fe593.chunk.js","sourcesContent":["//Traer las peliculas desde la api\nexport function getMovies(titulo) {\n\n  return function(dispatch) {\n    return fetch(`http://www.omdbapi.com/?s=${titulo}&apikey=e7549ca3`)\n      .then(response => response.json())\n      .then(json => {\n        dispatch({ type: \"GET_MOVIES\", payload: json });\n      });\n  };\n\n      \n  \n};\n\n\n\n//Traer detalles especifico de alguna pelicula\nexport function getMovieDetail(movie){\n\n  return function(dispatch) {\n    return fetch(`http://www.omdbapi.com/?i=${movie}&apikey=e7549ca3`)\n      .then(response => response.json())\n      .then(json => {\n        dispatch({ type: \"GET_MOVIE_DETAIL\", payload: json });\n      });\n  };\n\n}\n\n//Agregar como favoritas\nexport function addMovieFavorite(idMovie){\n  return{\n    type: 'ADD_MOVIE_FAVORITE',\n    payload: idMovie\n  }\n}\n\n//Eliminar de favoritos\nexport function removeMovieFavorite(idMovie){\n  return{\n    type: 'REMOVE_MOVIE_FAVORITE',\n    payload: idMovie\n  }\n}","import { getMovies , addMovieFavorite } from \"../actions/index\";\n\nconst initialState = {\n  moviesFavourites: [],\n  moviesLoaded: [],\n  movieDetail: {}\n};\n\nfunction rootReducer(state = initialState, action) {\n\n  if (action.type === \"ADD_MOVIE_FAVORITE\") {\n\n      return {\n        ...state,\n        moviesFavourites: state.moviesFavourites.concat(action.payload)\n      }\n  }\n  if (action.type === \"GET_MOVIES\") {\n      return {\n        ...state,\n        moviesLoaded: action.payload.Search\n      };\n  }\n\n  if (action.type === \"GET_MOVIE_DETAIL\") {\n\n    return {\n      ...state,\n      movieDetail: action.payload\n    };\n  }\n\n  if (action.type === \"REMOVE_MOVIE_FAVORITE\") {\n\n    return{\n      ...state,\n      moviesFavourites: state.moviesFavourites.filter(movie => movie.imdbID !== action.payload)\n    }\n\n  }\n\n\n\n  \n  return state;\n}\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport thunk from \"redux-thunk\";\n\n//Activar el complemento devtool\nconst composeEnhancers = (typeof window!== 'undefined' && window.__REDUX_DEVSTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;","import React, { Component } from \"react\";\nimport store from '../../store/index';\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport './Favorites.css';\n\nimport { getMovies , getMovieDetail , addMovieFavorite , removeMovieFavorite  } from '../../actions/index';\n\nexport class ConnectedList extends Component {\n\n  constructor(props){\n    super(props);\n\n    console.log('Ya!!!!' , this.props.favorites)\n\n  }\n\n  removeMovieFavorite(idMovie){\n    \n    this.props.removeMovieFavorite(idMovie);\n  }\n\n\n  render() {\n    return (\n      <section id=\"search-box\">\n        \n        <div id=\"results\">\n            <h4>My Favorites</h4>\n\n            {this.props.favorites.map((movie , index = 0)=>\n              <div className={index%2 === 0? \"result result-acent\": \"result\"}>\n                <Link to={`/movie/${movie.imdbID}`}>\n                  <a>{movie.Title}</a>\n                </Link>\n                {/*Favorite heart (if this movie is on favorite store array will be changes in fill)*/}\n                {\n                  this.props.favorites.some(element => element.imdbID === movie.imdbID)?\n                    <button id=\"btn-favorite\" onClick={() => this.removeMovieFavorite(this.props.movie.imdbID)}><i class=\"bi bi-heart-fill\"></i></button>:\n                    <button id=\"btn-favorite\" onClick={() => this.removeMovieFavorite(this.props.movie.imdbID)}><i class=\"bi bi-heart\"></i></button>\n                }\n\n                  <p>{movie.Plot}</p>\n                \n              </div>            \n            )}\n\n            \n            \n        </div> \n\n      </section>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    movies: state.moviesLoaded,\n    movie: state.movieDetail,\n    favorites: state.moviesFavourites,\n  };\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addMovieFavorite: movie => dispatch(addMovieFavorite(movie)),\n    getMovies: title => dispatch(getMovies(title)),\n    getMovieDetail: id => dispatch(getMovieDetail(id)),\n    removeMovieFavorite: id => dispatch(removeMovieFavorite(id))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedList);\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport store from '../../store/index';\nimport { getMovies , getMovieDetail , addMovieFavorite , removeMovieFavorite  } from '../../actions/index';\n\nimport './Movie.css';\n\nclass Movie extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n\n        this.props.getMovieDetail(this.props.match.params.id)\n    }\n\n\n    addFavorite(movie){\n      //Enviamos el id al store\n      this.props.addMovieFavorite(movie);\n    }\n\n    removeMovieFavorite(idMovie){\n        this.props.removeMovieFavorite(idMovie);\n      }\n\n    render() {\n        return (\n\n            <section id=\"movie-box\">\n        \n                <aside id=\"img-movie-box\">\n                    <img src={this.props.movie.Poster} alt=\"\" id=\"img-movie\"/>\n                </aside>\n                    \n                <aside id=\"box-movie-description\">\n                    {/* Title and favorite button */}\n                    <div class=\"box-title-movie\">\n                        <h1>{this.props.movie.Title} \n                          {/* Favorite button  (if this movie is on the favorites store array the button changes)*/}\n                          {\n                            this.props.favorites.some(element => element.imdbID === this.props.movie.imdbID)?\n                                <button id=\"btn-favorite\" onClick={() => this.removeMovieFavorite(this.props.movie.imdbID)}><i class=\"bi bi-heart-fill\"></i></button>:\n                                <button id=\"btn-favorite\" onClick={() => this.addFavorite(this.props.movie)}><i class=\"bi bi-heart\"></i></button>\n                          }\n                          \n\n                        </h1>\n                    </div>\n                    {/*Descripcion*/}\n                    <p>{this.props.movie.Plot}</p>\n                    <br></br>\n                    {/*Awards*/}\n                    <div id=\"awards-box\">\n                        <h4>Awards</h4>\n                        <p><i class=\"bi bi-award\"></i> {this.props.movie.Awards}</p>\n                    </div>\n                    \n\n                    <br></br>\n                    {/*Any dates*/}\n                    <div class=\"movie-table\">\n                        <span class=\"movie-table-title\">Year:</span>\n                        <span>{this.props.movie.Year}</span>\n                    </div>\n\n                    <div class=\"movie-table\">\n                        <span class=\"movie-table-title\">Genre:</span>\n                        <span>{this.props.movie.Genre}</span>\n                    </div>\n\n                    <div class=\"movie-table\">\n                        <span class=\"movie-table-title\">Director:</span>\n                        <span>{this.props.movie.Director}</span>\n                    </div>\n\n                    <div class=\"movie-table\">\n                        <span class=\"movie-table-title\">Actors:</span>\n                        <span>{this.props.movie.Actors}</span>\n                    </div>\n\n                    <div class=\"movie-table\">\n                        <span class=\"movie-table-title\">Writer:</span>\n                        <span>{this.props.movie.Writer}</span>\n                    </div>\n\n                    <div class=\"movie-table\">\n                        <span class=\"movie-table-title\">Languages:</span>\n                        <span>English</span>\n                    </div>\n                    {/*Share button*/}\n                    <button id=\"btn-share-movie\">Share this movie <i class=\"bi bi-share-fill\"></i></button>\n\n                </aside>\n\n            </section>\n\n\n\n\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n      movies: state.moviesLoaded,\n      movie: state.movieDetail,\n      favorites: state.moviesFavourites,\n    };\n  }\n\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n      addMovieFavorite: movie => dispatch(addMovieFavorite(movie)),\n      getMovies: title => dispatch(getMovies(title)),\n      getMovieDetail: id => dispatch(getMovieDetail(id)),\n      removeMovieFavorite: id => dispatch(removeMovieFavorite(id))\n    };\n  }\n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Movie);","import React, { Component } from \"react\";\nimport store from '../../store/index';\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport './Buscador.css';\n\n//Components\nimport Movie from '../Movie/Movie';\n\n//Actions\nimport { getMovies , getMovieDetail , addMovieFavorite , removeMovieFavorite } from '../../actions/index';\n\nexport class Buscador extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n    };\n  }\n  handleChange(event) {\n    this.setState({ title: event.target.value });\n  }\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    //Hacemos el distpach\n    this.props.getMovies(this.state.title)\n\n\n    //Setear el buscador a vacio\n    this.setState({title: ''})\n  }\n\n  \n\n  render() {\n    const { title } = this.state;\n    return (\n      <div>\n        \n\n\n        <section id=\"search-box\">\n          <form action=\"#\" id=\"form-search\" onSubmit={(e) => this.handleSubmit(e)}>\n              {/* Input para buscar */}\n              <input  type=\"text\" \n                      placeholder=\"Search a movie\"\n                      id=\"input-search\"\n                      autoComplete=\"off\"\n                      value={title}\n                      onChange={(e) => this.handleChange(e)}\n              />\n\n\n              <input type=\"button\" value=\"Search\" id=\"btn-search\" />\n          </form>\n\n          {/* Resultados de la busqueda */}\n          <div id=\"results\">\n              <h4>Result of your search</h4>\n\n              {/* Cada uno de los links  (al map le pasamos un argumento index que solo sirve para dar estilos segun su posicion)*/}\n              {/*Si el index es impar se aplicara la clase acent y si no no po*/}\n              {\n                this.props.movies.map((movie , index=0) => \n\n                  <div className={index%2 === 0? \"result result-acent\": \"result\"}>\n\n\n                    <Link to={`/movie/${movie.imdbID}`}>\n                      <a href=\"movie.html\">{movie.Title}\n                        {/*Favorite heart (if this movie is on favorite store array will be changes in fill)*/}\n                        {\n                          this.props.favorites.some(element => element.imdbID === movie.imdbID)?\n                            <i className=\"bi bi-heart-fill\"></i>:\n                            <i className=\"bi bi-heart\"></i>\n                        }\n                        \n                      </a>\n\n                      <p>{movie.Year} | {movie.Type}</p>\n                    </Link>\n                    \n                  </div>\n\n\n                  \n                )\n              }\n\n              \n              \n\n              \n              \n          </div> \n\n        </section>\n\n      </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    movies: state.moviesLoaded,\n    favorites: state.moviesFavourites\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addMovieFavorite: movie => dispatch(addMovieFavorite(movie)),\n    getMovies: title => dispatch(getMovies(title))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Buscador);\n","export default __webpack_public_path__ + \"static/media/logo.b8e9d89f.svg\";","import React from 'react';\nimport { NavLink , Link } from 'react-router-dom';\n//Import logo\nimport Logo from '../../assets/logo.svg';\n\n\nimport './Navbar.css';\n\nexport default function NavBar() {\n    return (\n\n        <header>\n            {/*Logo*/}\n            <Link to={'/'}><img src={Logo} alt=\"\" id='logo'/></Link>\n            <ul id='link-box'>\n                <li>\n                    <NavLink exact to=\"/\" activeClassName='linkActive' >Home</NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/favs\" activeClassName='linkActive' >Favorites</NavLink>\n                </li>\n            </ul>\n        </header>\n    )\n}","import React, { Component } from \"react\";\nimport './Footer.css';\n\nexport default class Footer extends Component{\n\n\n  render(){\n    return(\n      <footer>\n          <h6>Cristian Nazareno Gonzalez</h6>\n          <h6>Homework 12 del Modulo 2 de Henry</h6>\n      </footer>\n    )\n    \n  }\n\n}\n\n","import React from \"react\";\n\nimport './App.css';\n\nimport Favorites from \"./components/Favorites/Favorites\";\nimport Buscador from \"./components/Buscador/Buscador\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport { Route } from \"react-router-dom\";\nimport Movie from \"./components/Movie/Movie\";\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  return (\n      <React.Fragment>\n          <NavBar />\n          <Route exact path=\"/\" component={Buscador} />\n          <Route path=\"/favs\" component={Favorites} />\n          <Route path=\"/movie/:id\" component={Movie} />\n          <Footer></Footer>\n      </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}